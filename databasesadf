#!/bin/bash

set -e

source_host=$1
source_api_key=$2
target_host=$3
target_api_key=$4

source_folders_url="https://${source_host}/api/folders"
target_folders_url="https://${target_host}/api/folders"
source_dashboards_url="https://${source_host}/api/search?folderIds="
target_dashboards_url="https://${target_host}/api/dashboards/db"

function pullFolders() {
  logme "info" "pullFolders:: Fetching folders from source Grafana"

  source_folders=$(curl -k -s -H "Authorization: Bearer ${source_api_key}" "$source_folders_url")

  if [ -z "$source_folders" ]; then
    logme "err" "Failed to retrieve folders from the source"
    exit 1
  fi

  echo "$source_folders"
  logme "info" "pullFolders:: Folders fetched successfully"
}

function createFolders() {
  logme "info" "createFolders:: Creating folders in target Grafana"

  echo "$source_folders" | grep -o '{[^}]*}' | while read -r folder; do
    uid=$(echo "$folder" | grep -o '"uid":"[^"]*"' | awk -F':' '{print $2}' | tr -d '"')
    title=$(echo "$folder" | grep -o '"title":"[^"]*"' | awk -F':' '{print $2}' | tr -d '"')
    payload="{\"uid\":\"$uid\",\"title\":\"$title\"}"

    response=$(curl -k -s -H "Authorization: Bearer ${target_api_key}" -H "Content-Type: application/json" -X POST -d "$payload" "$target_folders_url")

    if echo "$response" | grep -q '"id"'; then
      logme "info" "Folder '$title' created successfully"
    else
      logme "err" "Failed to create folder '$title'"
      logme "err" "Response: $response"
    fi
  done
}

function pullDashboards() {
  logme "info" "pullDashboards:: Fetching dashboards from source Grafana"

  echo "$source_folders" | grep -o '{[^}]*}' | while read -r folder; do
    uid=$(echo "$folder" | grep -o '"uid":"[^"]*"' | awk -F':' '{print $2}' | tr -d '"')
    dashboards=$(curl -k -s -H "Authorization: Bearer ${source_api_key}" "${source_dashboards_url}${uid}")

    if [ -z "$dashboards" ]; then
      logme "err" "Failed to retrieve dashboards for folder UID '$uid'"
      exit 1
    fi

    echo "$dashboards" | grep -o '{[^}]*}' | while read -r dashboard; do
      dashboard_uid=$(echo "$dashboard" | grep -o '"uid":"[^"]*"' | awk -F':' '{print $2}' | tr -d '"')
      dashboard_json=$(curl -k -s -H "Authorization: Bearer ${source_api_key}" "${source_host}/api/dashboards/uid/${dashboard_uid}")

      if [ -z "$dashboard_json" ]; then
        logme "err" "Failed to retrieve dashboard UID '$dashboard_uid'"
        exit 1
      fi

      createDashboard "$dashboard_json"
    done
  done

  logme "info" "pullDashboards:: Dashboards fetched successfully"
}

function createDashboard() {
  dashboard_json=$1
  folder_uid=$(echo "$dashboard_json" | grep -o '"folderUid":"[^"]*"' | awk -F':' '{print $2}' | tr -d '"')
  payload=$(echo "$dashboard_json" | grep -o '"dashboard":{[^}]*}' | sed 's/"dashboard"://')

  logme "info" "Payload: $payload"

  response=$(curl -k -s -H "Authorization: Bearer ${target_api_key}" -H "Content-Type: application/json" -X POST -d "{\"dashboard\":$payload,\"folderUid\":\"$folder_uid\",\"overwrite\":true}" "$target_dashboards_url")

  if echo "$response" | grep -q '"id"'; then
    logme "info" "Dashboard created successfully in folder UID '$folder_uid'"
  else
    logme "err" "Failed to create dashboard in folder UID '$folder_uid'"
    logme "err" "Response: $response"
  fi
}

function logme() {
  NC="\033[0m"
  case $1 in
    "err") COLOR="\e[31m";;
    "info") COLOR="\033[0;32m";;
    *) COLOR="\033[0m";;
  esac
  echo -e "${COLOR} $2 ${NC}"
}

pullFolders
createFolders
pullDashboards
