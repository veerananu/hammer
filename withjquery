#!/bin/bash

# Variables
SOURCE_GRAFANA_URL="http://source-grafana-instance.com"
TARGET_GRAFANA_URL="http://target-grafana-instance.com"
API_KEY_SOURCE="Bearer YOUR_SOURCE_API_KEY"
API_KEY_TARGET="Bearer YOUR_TARGET_API_KEY"

# Function to transfer a folder
transfer_folder() {
    local folder_uid=$1
    folder=$(curl -s -H "Authorization: $API_KEY_SOURCE" "${SOURCE_GRAFANA_URL}/api/folders/${folder_uid}")
    if [ ! -z "$folder" ]; then
        folder_name=$(echo $folder | jq -r .title)
        folder_uid=$(echo $folder | jq -r .uid)
        folder_payload=$(jq -n --arg title "$folder_name" --arg uid "$folder_uid" '{"title":$title, "uid":$uid}')
        curl -s -H "Authorization: $API_KEY_TARGET" -H "Content-Type: application/json" -X POST -d "$folder_payload" "${TARGET_GRAFANA_URL}/api/folders" > /dev/null
        echo "Transferred folder: $folder_name"
    else
        echo "Folder with UID $folder_uid not found on source."
    fi
}

# Function to transfer a dashboard
transfer_dashboard() {
    local dashboard_uid=$1
    dashboard=$(curl -s -H "Authorization: $API_KEY_SOURCE" "${SOURCE_GRAFANA_URL}/api/dashboards/uid/${dashboard_uid}")
    if [ ! -z "$dashboard" ]; then
        dashboard_json=$(echo $dashboard | jq -r .dashboard)
        dashboard_title=$(echo $dashboard_json | jq -r .title)
        dashboard_uid=$(echo $dashboard_json | jq -r .uid)
        folder_uid=$(echo $dashboard | jq -r .meta.folderUid)

        # Prepare dashboard payload
        dashboard_payload=$(jq -n --argjson dashboard "$dashboard_json" --arg folderUid "$folder_uid" '{"dashboard":$dashboard,"folderUid":$folderUid,"overwrite":true}')

        # Create or update the dashboard on the target Grafana instance
        response=$(curl -s -w "%{http_code}" -o /dev/null -H "Authorization: $API_KEY_TARGET" -H "Content-Type: application/json" -X POST -d "$dashboard_payload" "${TARGET_GRAFANA_URL}/api/dashboards/db")
        
        if [ "$response" -eq 200 ]; then
            echo "Transferred dashboard: $dashboard_title"
        else
            echo "Failed to transfer dashboard: $dashboard_title. HTTP Status: $response"
            echo "Payload: $dashboard_payload"
        fi
    else
        echo "Dashboard with UID $dashboard_uid not found on source."
    fi
}

# Get all folders from the source Grafana instance
folders=$(curl -s -H "Authorization: $API_KEY_SOURCE" "${SOURCE_GRAFANA_URL}/api/folders")
folder_uids=$(echo $folders | jq -r '.[].uid')

# Transfer folders
for folder_uid in $folder_uids; do
    transfer_folder $folder_uid
done

# Get all dashboards from the source Grafana instance
dashboards=$(curl -s -H "Authorization: $API_KEY_SOURCE" "${SOURCE_GRAFANA_URL}/api/search?query=&type=dash-db")
dashboard_uids=$(echo $dashboards | jq -r '.[].uid')

# Transfer dashboards
for dashboard_uid in $dashboard_uids; do
    transfer_dashboard $dashboard_uid
done

echo "Transfer complete."
