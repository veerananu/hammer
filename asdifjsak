# IAM Role in Account B for Firehose
resource "aws_iam_role" "firehose_role" {
  name = "FirehoseToS3Role"

  # Trust policy: Allow Kinesis Firehose to assume this role
  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Effect = "Allow"
        Principal = {
          Service = "firehose.amazonaws.com"
        }
        Action = "sts:AssumeRole"
      }
    ]
  })
}

# IAM Policy in Account B for S3 access
resource "aws_iam_policy" "firehose_s3_policy" {
  name        = "FirehoseS3AccessPolicy"
  description = "Policy for Firehose to write to S3 bucket in Account A"

  # Permissions policy: Allow s3:PutObject to the bucket in Account A
  policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Effect = "Allow"
        Action = [
          "s3:PutObject",
          "s3:PutObjectAcl"
        ]
        Resource = "arn:aws:s3:::my-bucket-in-a/*"
      },
      {
        Effect = "Allow"
        Action = [
          "s3:GetBucketLocation",
          "s3:ListBucket"
        ]
        Resource = "arn:aws:s3:::my-bucket-in-a"
      }
    ]
  })
}

# Attach the policy to the role in Account B
resource "aws_iam_role_policy_attachment" "firehose_policy_attachment" {
  role       = aws_iam_role.firehose_role.name
  policy_arn = aws_iam_policy.firehose_s3_policy.arn
}
